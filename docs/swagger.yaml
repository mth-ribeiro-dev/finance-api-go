basePath: /api/v1
definitions:
  model.Transaction:
    properties:
      amount:
        type: number
      category:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: integer
      type:
        type: string
      user_id:
        type: integer
    type: object
  model.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      status:
        type: boolean
    type: object
host: localhost:8081
info:
  contact:
    email: matheus.junio159@gmail.com
    name: Matheus Ribeiro
  description: This is a REST API for managing personal finances developed in Go.
  license:
    name: Creative Commons BY-NC 4.0
    url: https://creativecommons.org/licenses/by-nc/4.0/
  title: MyFinance API
  version: 0.3.3
paths:
  /balance/{userId}:
    get:
      consumes:
      - application/json
      description: Get the current balance for a specific user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: number
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user balance
      tags:
      - finance
  /transactions:
    post:
      consumes:
      - application/json
      description: Add a new financial transaction for a user
      parameters:
      - description: Transaction object
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/model.Transaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Transaction'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a new transaction
      tags:
      - finance
  /transactions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing financial transaction
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a transaction
      tags:
      - finance
    put:
      consumes:
      - application/json
      description: Update an existing financial transaction
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated transaction object
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/model.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a transaction
      tags:
      - finance
  /transactions/{userId}:
    get:
      consumes:
      - application/json
      description: Get all transactions for a specific user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user transactions
      tags:
      - finance
  /users:
    post:
      consumes:
      - application/json
      description: Register a new user in the system
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing user from the system
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user
      tags:
      - users
  /users/auth:
    post:
      consumes:
      - application/json
      description: Authenticate a user with email and password
      parameters:
      - description: Login information
        in: body
        name: loginInfo
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Authenticate a user
      tags:
      - users
schemes:
- http
swagger: "2.0"
